name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7', '3.0']
        rails-version: ['rails-6.0', 'rails-6.1', 'rails-7.0', 'rails-7.1']

    name: Ruby ${{ matrix.ruby-version }} - ${{ matrix.rails-version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: false
        bundler: '2.4.22'

    - name: Cache gems
      uses: actions/cache@v4
      with:
        path: |
          vendor/bundle
          gemfiles/vendor/bundle
        key: ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.rails-version }}-${{ hashFiles('Gemfile', 'gemfiles/rails_*.gemfile*', 'Appraisals') }}
        restore-keys: |
          ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.rails-version }}-
          ${{ runner.os }}-gems-${{ matrix.ruby-version }}-
          ${{ runner.os }}-gems-

    - name: Install only test dependencies (Appraisal will handle Rails versions)
      run: |
        bundle config set --local path vendor/bundle
        bundle install --jobs 4 --retry 3 --without development

    - name: Generate and install only needed Appraisal gemfile
      run: |
        # Generate all gemfiles first
        bundle exec appraisal generate
        # Install only the specific gemfile we need (convert dashes to underscores)
        RAILS_GEMFILE=$(echo "${{ matrix.rails-version }}" | tr '-' '_')
        BUNDLE_GEMFILE=gemfiles/${RAILS_GEMFILE}.gemfile bundle install --jobs 4 --retry 3

    - name: Run tests
      run: bundle exec appraisal ${{ matrix.rails-version }} rake test

    - name: Check gem build
      run: gem build rails_action_tracker.gemspec
      if: matrix.ruby-version == '3.0' && matrix.rails-version == 'rails-7.1'

  # Security and quality checks
  security:
    runs-on: ubuntu-latest
    name: Security and Quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: false
        bundler: '2.4.22'

    - name: Run bundle audit
      run: |
        gem install bundler-audit
        bundle audit --update
      continue-on-error: true

    - name: Install development dependencies
      run: |
        bundle config set --local path vendor/bundle
        bundle config set --local with 'development'
        bundle install --jobs 4 --retry 3

    - name: Run RuboCop
      run: bundle exec rubocop --parallel --format github

    - name: Check for security vulnerabilities
      run: |
        gem install brakeman
        brakeman --rails4 --no-pager
      continue-on-error: true