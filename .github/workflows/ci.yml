name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7', '3.0', '3.1', '3.4']
        rails-version: 
          - 'rails-5.0'
          - 'rails-5.1' 
          - 'rails-5.2'
          - 'rails-6.0'
          - 'rails-6.1'
          - 'rails-7.0'
          - 'rails-7.1'
          - 'rails-8.0'
        exclude:
          # Rails 5.x doesn't support Ruby 3.0+
          - { ruby-version: '3.0', rails-version: 'rails-5.0' }
          - { ruby-version: '3.0', rails-version: 'rails-5.1' }
          - { ruby-version: '3.0', rails-version: 'rails-5.2' }
          - { ruby-version: '3.1', rails-version: 'rails-5.0' }
          - { ruby-version: '3.1', rails-version: 'rails-5.1' }
          - { ruby-version: '3.1', rails-version: 'rails-5.2' }
          - { ruby-version: '3.4', rails-version: 'rails-5.0' }
          - { ruby-version: '3.4', rails-version: 'rails-5.1' }
          - { ruby-version: '3.4', rails-version: 'rails-5.2' }
          # Rails 6.0 doesn't support Ruby 3.1+
          - { ruby-version: '3.1', rails-version: 'rails-6.0' }
          - { ruby-version: '3.4', rails-version: 'rails-6.0' }
          # Rails 8.0 doesn't support Ruby 2.7
          - { ruby-version: '2.7', rails-version: 'rails-8.0' }
          # Rails 7.1 has compatibility issues with Ruby 3.4
          - { ruby-version: '3.4', rails-version: 'rails-7.1' }

    name: Ruby ${{ matrix.ruby-version }} - ${{ matrix.rails-version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: false

    - name: Cache gems
      uses: actions/cache@v4
      with:
        path: |
          vendor/bundle
          gemfiles/vendor/bundle
        key: ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.rails-version }}-${{ hashFiles('**/Gemfile.lock', 'gemfiles/*.gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.rails-version }}-
          ${{ runner.os }}-gems-${{ matrix.ruby-version }}-
          ${{ runner.os }}-gems-

    - name: Install dependencies
      run: |
        # Install appropriate Bundler version for Ruby compatibility
        if [[ "${{ matrix.ruby-version }}" == "2.7" ]] || [[ "${{ matrix.ruby-version }}" == "3.0" ]]; then
          gem install bundler -v "~> 2.4.0"
        else
          gem install bundler
        fi
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Generate Appraisal gemfiles
      run: bundle exec appraisal install

    - name: Run tests
      run: bundle exec appraisal ${{ matrix.rails-version }} rake test

    - name: Run RuboCop
      run: bundle exec rubocop --parallel
      if: matrix.ruby-version == '3.4' && matrix.rails-version == 'rails-7.0'

  # Separate job for testing without specific Rails version (latest)
  test-latest:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        ruby-version: ['2.7', '3.0', '3.1', '3.4']
    
    name: Ruby ${{ matrix.ruby-version }} - Latest Rails
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true

    - name: Run tests
      run: bundle exec rake test

    - name: Check gem build
      run: gem build rails_action_tracker.gemspec
      if: matrix.ruby-version == '3.4'

  # Security and quality checks
  security:
    runs-on: ubuntu-latest
    name: Security and Quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4'
        bundler-cache: true

    - name: Run bundle audit
      run: |
        gem install bundler-audit
        bundle audit --update
      continue-on-error: true

    - name: Run RuboCop
      run: bundle exec rubocop --parallel --format github

    - name: Check for security vulnerabilities
      run: |
        gem install brakeman
        brakeman --rails4 --no-pager
      continue-on-error: true